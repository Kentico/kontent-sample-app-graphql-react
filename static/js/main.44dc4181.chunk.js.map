{"version":3,"sources":["components/Layout.js","components/UnknownComponent.js","components/Header.js","utils/kontentImageLoader.js","utils/srcIsKontentAsset.js","utils/getUrlSlug.js","components/Link.js","components/Action.js","components/Filter.js","components/Image.js","components/SideDrawer.js","components/Icon.js","components/FormField.js","components/RichTextComponent.js","components/RichText.js","utils/getUrlFromMapping.js","components/CtaButtons.js","components/GraphQLLoader.js","graphQLFragments.js","utils/getSeo.js","Post.js","components/sections/HeroSection.js","components/sections/FeaturesSection.js","components/sections/CtaSection.js","components/thumbnails/Post.js","components/sections/ListingSection.js","components/sections/ContentSection.js","components/sections/ContactSection.js","LandingPage.js","utils/queryString.js","ListingPage.js","SimplePage.js","App.js","index.js"],"names":["useStyles","makeStyles","_theme","root","minHeight","flex","flexGrow","Layout","props","classes","siteConfiguration","favicon","font","palette","seo","description","keyWords","canonicalUrl","noIndex","fontName","title","colors","primary","secondary","theme","createMuiTheme","main","background","default","typography","fontFamily","charSet","name","content","rel","href","crossOrigin","as","media","onLoad","ThemeProvider","CssBaseline","Box","display","flexDirection","alignItems","alignContent","className","children","UnknownComponent","useLayout","logo","width","mainMenu","justifyContent","margin","spacing","Header","asset","mainMenuActions","AppBar","color","position","Container","Toolbar","src","url","alt","height","Typography","variant","Hidden","smDown","map","navigationItem","index","action","mdUp","navLinks","kontentImageLoader","quality","ImageUrlBuilder","withWidth","withQuality","withCompression","ImageCompressionEnum","Lossless","withAutomaticFormat","getUrl","kontentAssetHostnames","srcIsKontentAsset","srcUrl","URL","includes","hostname","getUrlSlug","slugPartsArrayOrString","slug","concat","join","startsWith","Link","activeClassName","classNameProps","innerRef","naked","other","absoluteLink","match","useRouteMatch","clsx","ref","to","component","RouterLink","React","forwardRef","Action","get","_system_","type","codename","action_options","role","outlined","some","item","config","new_window","no_follow","icon","iconPosition","options","target","undefined","Button","startIcon","endIcon","underline","size","label","selectEmpty","marginTop","Filter","history","useHistory","shrink","value","getValueFromLocation","location","onChange","push","updateLocation","displayEmpty","renderValue","find","option","MenuItem","Image","sizes","loading","useTheme","componentWidth","breakpoints","values","md","componentHeight","imgProps","srcSet","style","list","linkText","textDecoration","textTransform","SideDrawer","anchor","useState","right","state","setState","toggleDrawer","open","event","key","IconButton","edge","aria-label","onClick","iconCodename","Drawer","onOpen","onClose","onKeyDown","List","ListItem","Icon","viewBox","xmlns","d","formControl","minWidth","textArea","checkbox","paddingLeft","FormField","fieldComponent","selectBoxValue","setSelectBoxValue","field","isTextArea","FormGroup","FormControlLabel","control","Checkbox","TextField","multiline","rows","placeholder","required","FormControl","InputLabel","id","Select","labelId","RichTextComponent","richTextElement","mappings","resolveLinkedItem","resolveImage","resolveLink","resolveDomNode","cleanedValue","html","replace","linkedItems","components","items","reduce","result","parseHTML","domNode","assets","itemHyperlinks","attribs","isLinkedItem","domToReact","IMAGE_ID_ATTRIBUTE_IDENTIFIER","isImage","imageId","image","LINKED_ITEM_ID_ATTRIBUTE_IDENTIFIER","isLink","linkId","link","replaceNode","richText","borderCollapse","border","borderColor","grey","textAlign","padding","backgroundColor","quote","fontStyle","marginBottom","code","inlineImage","RichText","linkedItem","quoteText","_domNode","_domToReact","sm","Object","keys","navigationCodename","getUrlFromMapping","data","CtaButtons","action_idx","GraphQLLoader","error","richTextAssetFields","gql","assetFields","subpageNavigationItemFields","richTextFields","seoFields","actionFields","getSeo","paddingTop","Post","postPageQuery","post","setPost","setSeo","imageSizes","useQuery","variables","onCompleted","_seo","maxWidth","Date","toDateString","section","contrastText","column","actions","HeroSection","query","setSection","languageCodename","language","heroSection","Grid","container","direction","xs","row","intro","alignRight","FeaturesSection","featuresSection","feature","CtaSection","ctaSection","columnCount","postUrl","Math","floor","excerpt","publishingDate","author","firstName","lastName","itemCard","ListingSection","listingSectionQuery","relatedItemsData","setRelatedItemsData","limit","numberOfItems","contentType","length","item_idx","upperFirst","camelCase","ThumbnailLayout","thumbnails","Card","CardContent","ContentSection","formSubmission","ContactSection","contactSection","form","method","field_idx","sections","paddingBottom","LandingPage","landingPageFields","landingPageQuery","navigationAndLandingPageQuery","sectionItems","setSectionItems","landingPage","Component","site","authorQueryStringKey","personaQueryStringKey","pageQueryStringKey","setPageAndReturnQueryString","page","urlParams","set","setAuthor","setParameter","getAuthor","getParameter","URLSearchParams","search","delete","pathname","thumbnailPaper","pagination","ListingPage","listingPageQuery","relatedItems","setRelatedItems","authors","setAuthors","offset","collection","author_All","persona","parameterName","thumbnailLayouts","Paper","prevPage","nextPage","SimplePage","simplePageFields","simplePageQuery","navigationAndSimplePageQuery","setPage","simplePage","App","homePageQuery","getNavigationData","parrentSlug","navigationType","contentCodename","homepageCodename","homepage","subpages","forEach","navigationData","subItem","listingData","console","getMappings","getSiteConfiguration","setMappings","setSiteConfiguration","setHomepageSeo","homepageSeo","path","render","pageProps","authorQuery","personaQuery","pageQuery","pageNumber","parseInt","getListingPaginationAndFilter","GQL_ENDPOINT","process","REACT_APP_KONTENT_GRAPHQL_ENDPOINT","PROJECT_ID","REACT_APP_KONTENT_PROJECT_ID","client","ApolloClient","cache","InMemoryCache","uri","ReactDOM","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.44dc4181.chunk.js","sourcesContent":["import { Box, makeStyles } from \"@material-ui/core\";\r\nimport { Header } from \".\";\r\nimport { Helmet } from 'react-helmet-async';\r\nimport React from 'react';\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst useStyles = makeStyles((_theme) => ({\r\n    root: {\r\n        minHeight: \"100vh\"\r\n    },\r\n    flex: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nfunction Layout(props) {\r\n    const classes = useStyles();\r\n    const {\r\n        favicon,\r\n        font,\r\n        palette\r\n    } = props.siteConfiguration;\r\n    const {\r\n        description,\r\n        keyWords,\r\n        canonicalUrl,\r\n        noIndex\r\n    } = props.seo;\r\n    const fontName = font === \"nunito_sans\" ? \"Nunito Sans\" : font === \"fira_sans\" ? \"Fira Sans\" : \"Arial\";\r\n    const title = props.siteConfiguration.title && props.seo.title ? `${props.siteConfiguration.title} | ${props.seo.title}` : props.siteConfiguration.title\r\n    const colors = {\r\n        primary: \"#F05A22\",\r\n        secondary: \"#B72929\"\r\n    };\r\n\r\n    switch (palette) {\r\n        case \"blue\":\r\n            colors.primary = \"#3553B8\";\r\n            colors.secondary = \"#81D4FA\";\r\n            break;\r\n        case \"cyan\":\r\n            colors.primary = \"#007C91\";\r\n            colors.secondary = \"#5DDEF4\";\r\n            break;\r\n        case \"green\":\r\n            colors.primary = \"#2C9E7E\";\r\n            colors.secondary = \"#4b830d\";\r\n            break;\r\n        case \"purple\":\r\n            colors.primary = \"#7D3F9C\";\r\n            colors.secondary = \"#7986cb\";\r\n            break;\r\n        case \"default\":\r\n        default:\r\n            break;\r\n    }\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: colors.primary,\r\n            },\r\n            secondary: {\r\n                main: colors.secondary,\r\n            },\r\n            background: {\r\n                default: \"#FFF\",\r\n            },\r\n        },\r\n        typography: {\r\n            fontFamily: [\r\n                fontName,\r\n                \"sans-serif\"\r\n            ]\r\n        },\r\n    });\r\n\r\n\r\n  return (\r\n      <>\r\n          <Helmet>\r\n              <title>{title}</title>\r\n              <meta charSet=\"utf-8\" />\r\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n              <meta name=\"google\" content=\"notranslate\" />\r\n\r\n              {favicon && (\r\n                  <link rel=\"icon\" href={favicon} />\r\n              )}\r\n\r\n              <meta name=\"description\" content={description} />\r\n              {keyWords && (\r\n                  <meta name=\"keywords\" content={keyWords} />\r\n              )}\r\n              {canonicalUrl ?? (\r\n                  <link rel=\"canonical\" href={canonicalUrl} />\r\n              )}\r\n              {noIndex && (\r\n                  <meta name=\"robots\" content=\"noindex,follow\" />\r\n              )}\r\n\r\n              {(font !== \"system-sans\") && (\r\n                  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"true\" />\r\n              )}\r\n              {(font === \"nunito_sans\") ? ([\r\n                  <link key=\"0\" href=\"https://fonts.googleapis.com/css2?family=Nunito+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap\" as=\"style\" rel=\"preload\" />,\r\n                  <link key=\"1\" href=\"https://fonts.googleapis.com/css2?family=Nunito+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap\" rel=\"stylesheet\" media=\"print\" onLoad=\"this.media='all'\" />,\r\n                  <noscript key=\"2\">{`\r\n                      <link\r\n                          rel=\"stylesheet\"\r\n                          href=\"https://fonts.googleapis.com/css2?family=Nunito+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap\"\r\n                      />\r\n                  `}</noscript>\r\n              ]) : ((font === \"fira_sans\") && ([\r\n                  <link key=\"0\" href=\"https://fonts.googleapis.com/css2?family=Fira+Sans:ital,wght@0,400;0,600;1,400;1,600&display=swap\" as=\"style\" rel=\"preload\" />,\r\n                  <link key=\"1\" href=\"https://fonts.googleapis.com/css2?family=Fira+Sans:ital,wght@0,400;0,600;1,400;1,600&display=swap\" rel=\"stylesheet\" media=\"print\" onLoad=\"this.media='all'\" />,\r\n                  <noscript key=\"2\">{`\r\n                      <link\r\n                          rel=\"stylesheet\"\r\n                          href=\"https://fonts.googleapis.com/css2?family=Nunito+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap\"\r\n                      />\r\n                  `}</noscript>\r\n              ]))}\r\n          </Helmet>\r\n          <ThemeProvider theme={theme}>\r\n              <CssBaseline />\r\n              <Box display=\"flex\" flexDirection=\"column\" alignItems=\"stretch\" alignContent=\"space-between\" className={classes.root}>\r\n                  <Header {...props.siteConfiguration} />\r\n                  <main className={classes.flex}>\r\n                      {props.children}\r\n                  </main>\r\n              </Box>\r\n          </ThemeProvider>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import { Layout } from \".\";\r\nfunction UnknownComponent(props) {\r\n  if (props.useLayout) {\r\n    return (\r\n      <Layout {...props}>\r\n        <div>\r\n          <h2>UNKNOWN COMPONENT</h2>\r\n          {props.children}\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>UNKNOWN COMPONENT</h2>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UnknownComponent;","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Action, Image, Link, SideDrawer } from \".\";\r\nimport { Container, Hidden } from \"@material-ui/core\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  logo: {\r\n    width: \"200px\",\r\n  },\r\n  mainMenu: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    \"& a\": {\r\n      margin: theme.spacing(1),\r\n    }\r\n  }\r\n}));\r\n\r\nfunction Header({ asset, title, mainMenuActions }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar color=\"transparent\" position=\"sticky\">\r\n        <Container>\r\n          <Toolbar>\r\n            <Link href='/' className={classes.logo}>\r\n              {asset\r\n                ? <Image\r\n                   asset={asset}\r\n                   src={asset.url}\r\n                   alt={title}\r\n                   width=\"200\"\r\n                   height=\"60\"\r\n                  />\r\n                : <Typography variant=\"h6\">{title}</Typography>\r\n              }\r\n            </Link>\r\n            <Hidden smDown>\r\n              <div className={classes.mainMenu}>\r\n                {mainMenuActions.map((navigationItem, index) =>\r\n                    <Action key={index} action={navigationItem} />)}\r\n              </div>\r\n            </Hidden>\r\n            <Hidden mdUp>\r\n              <div className={classes.mainMenu}>\r\n                <SideDrawer navLinks={mainMenuActions}/>\r\n              </div>\r\n            </Hidden>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { ImageUrlBuilder, ImageCompressionEnum } from \"@kentico/kontent-delivery\";\r\n\r\n\r\nconst kontentImageLoader = ({ src, width, quality }) => {\r\n  // https://docs.kontent.ai/reference/image-transformation\r\n  const builder = new ImageUrlBuilder(src)\r\n    .withWidth(width)\r\n    .withQuality(quality || 75)\r\n    .withCompression(ImageCompressionEnum.Lossless)\r\n    .withAutomaticFormat();\r\n\r\n  return builder.getUrl();\r\n};\r\n\r\nexport default kontentImageLoader;","const kontentAssetHostnames = [\r\n  \"assets-eu-01.kc-usercontent.com\",\r\n  \"preview-assets-eu-01.kc-usercontent.com\",\r\n  \"assets-us-01.kc-usercontent.com\",\r\n  \"preview-assets-us-01.kc-usercontent.com\"\r\n];\r\n\r\nconst srcIsKontentAsset = (src) => {\r\n  try {\r\n    const srcUrl = new URL(src);\r\n    return kontentAssetHostnames.includes(srcUrl.hostname);\r\n  }\r\n  catch {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default srcIsKontentAsset;","export default function getUrlSlug(slugPartsArrayOrString) {\r\n  const slugParts = [].concat(slugPartsArrayOrString);\r\n  const slug = slugParts.join(\"/\");\r\n\r\n  return slug.startsWith(\"/\") ? slug : `/${slug}`\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Link as RouterLink,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport { getUrlSlug } from '../utils';\r\n\r\nfunction Link(props) {\r\n  const {\r\n    href,\r\n    activeClassName = \"active\",\r\n    className: classNameProps,\r\n    innerRef,\r\n    naked,\r\n    ...other\r\n  } = props;\r\n\r\n  const absoluteLink = getUrlSlug(href);\r\n\r\n  let match = useRouteMatch(absoluteLink);\r\n\r\n  const className = clsx(classNameProps, {\r\n    [activeClassName]: match && activeClassName,\r\n  });\r\n\r\n  if (naked) {\r\n    return <RouterLink className={className} ref={innerRef} to={absoluteLink} {...other}/>;\r\n  }\r\n\r\n  return (\r\n    <MuiLink component={RouterLink} className={className} ref={innerRef} to={absoluteLink} {...other}/>\r\n  );\r\n}\r\n\r\nLink.propTypes = {\r\n  activeClassName: PropTypes.string,\r\n  as: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  className: PropTypes.string,\r\n  href: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  naked: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  prefetch: PropTypes.bool,\r\n};\r\n\r\nexport default React.forwardRef((props, ref) => <Link {...props} innerRef={ref} />);\r\n","import get from \"lodash.get\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link, Icon } from \".\";\r\n\r\nfunction Action(props) {\r\n  const { action } = props;\r\n  const navigationItem = get(action, \"navigationItem\", null);\r\n  const href = navigationItem._system_.type.codename === \"external_url\" ?\r\n               get(navigationItem, \"url\") : get(navigationItem, \"slug\");\r\n  const action_options = get(action, \"options.items\", []);\r\n\r\n\r\n  const role = get(action, \"role.items[0]._system_.codename\", null);\r\n  const outlined = action_options.some(item => item._system_.codename === \"outlined\");\r\n  const config = {};\r\n  if (role) {\r\n    config.variant = \"contained\";\r\n    config.color = role;\r\n  }\r\n  if (outlined) {\r\n    config.variant = \"outlined\";\r\n  }\r\n\r\n  const new_window = action_options.some(item => item._system_.codename === \"new_window\");\r\n  const no_follow = action_options.some(item => item._system_.codename === \"no_follow\");\r\n  const icon = get(action, \"icon.items[0]\", null);\r\n  const iconPosition = get(icon, \"iconPosition[0]._system_.codename\", null);\r\n  const options = {\r\n    target: new_window ? \"_blank\" : undefined,\r\n    rel: new_window || no_follow\r\n      ? `${new_window ? \"noopener\" : \"\"} ${no_follow ? \"nofollow\" : \"\"}`\r\n      : undefined,\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      component={Link}\r\n      startIcon={iconPosition && iconPosition === \"left\" && <Icon icon={icon} />}\r\n      endIcon={iconPosition && iconPosition === \"right\" && <Icon icon={icon} />}\r\n      underline=\"none\"\r\n      size={props.size}\r\n      href={href}\r\n      {...config}\r\n      {...options}>\r\n      {action.label}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default Action;\r\n","import React from \"react\";\r\nimport PropTypes, { object } from \"prop-types\";\r\nimport MuiInputLabel from \"@material-ui/core/InputLabel\";\r\nimport MuiSelect from \"@material-ui/core/Select\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles, MenuItem } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Filter(props) {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const handleClick = ({target}) => {\r\n    history.push(props.updateLocation(history.location, target.value));\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <MuiInputLabel shrink>\r\n          {props.label}\r\n        </MuiInputLabel>\r\n        <MuiSelect\r\n            value={props.getValueFromLocation(history.location)}\r\n            onChange={handleClick}\r\n            className={classes.selectEmpty}\r\n            displayEmpty\r\n            renderValue={value => !value ? <em>{`All ${props.label}s`}</em> : props.options.find(option => option.codename === value).name}\r\n        >\r\n          <MenuItem key={`filter${props.label}ItemNone`} value=\"\"><b>{`All ${props.label}s`}</b></MenuItem>\r\n          {props.options.map((option, index) => <MenuItem key={`filter${props.label}Item${index}`} value={option.codename}>{option.name}</MenuItem>)}\r\n        </MuiSelect>\r\n      </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  options: PropTypes.arrayOf(object).isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { kontentImageLoader, srcIsKontentAsset } from \"../utils\";\r\nimport { useTheme } from \"@material-ui/core\";\r\n\r\nconst Image = (props) => {\r\n  const deviceSizes = [640, 750, 828, 1080, 1200, 1920, 2048, 3840];\r\n  const { asset, width, height, alt, sizes, loading } = props;\r\n  const theme = useTheme();\r\n  const componentWidth = width || asset.width || theme.breakpoints.values.md;\r\n  const componentHeight = height || (componentWidth / asset.width) * asset.height || undefined;\r\n\r\n  const imgProps = sizes && srcIsKontentAsset(asset.url) ? {\r\n    sizes: sizes,\r\n    srcSet: deviceSizes.map(size => `${kontentImageLoader({src: asset.url, width: size})} ${size}w`).join(\", \")\r\n  } : {\r\n    width: componentWidth,\r\n    height: componentHeight,\r\n  };\r\n\r\n  return <img src={asset.url} alt={alt} loading={loading} {...imgProps} style={{width: '100%'}}/>;\r\n};\r\n\r\nexport default Image;\r\n","import { Drawer, IconButton, List, ListItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useState } from \"react\";\r\nimport { Action, Icon } from \".\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250\r\n  },\r\n  linkText: {\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n    color: \"black\"\r\n  }\r\n});\r\n\r\nconst SideDrawer = (props) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({ right: false });\r\n\r\n  const toggleDrawer = (anchor, open) => event => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ [anchor]: open });\r\n  };\r\n\r\n  const sideDrawerList = anchor => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List component=\"nav\">\r\n        {props.navLinks.map((navigationItem, index) => (\r\n          <ListItem key={index} >\r\n            <Action action={navigationItem} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        edge=\"start\"\r\n        aria-label=\"menu\"\r\n        onClick={toggleDrawer(\"right\", true)}\r\n      >\r\n        <Icon iconCodename=\"menu\" />\r\n      </IconButton>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={state.right}\r\n        onOpen={toggleDrawer(\"right\", true)}\r\n        onClose={toggleDrawer(\"right\", false)}\r\n      >\r\n        {sideDrawerList(\"right\")}\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React from \"react\";\r\nimport get from \"lodash.get\";\r\nimport { UnknownComponent } from \".\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    width: theme.spacing(2)\r\n  }\r\n}));\r\n\r\n// It is possible to use Icon component, but it would increase the bundle size https://material-ui.com/components/icons/#icon-font-icons\r\nfunction Icon(props) {\r\n  const icon = get(props, \"icon.icon[0]._system_.codename\", null) || get(props, \"iconCodename\", null);\r\n  const classes = useStyles();\r\n\r\n  switch (icon) {\r\n    case \"arrow_left\":\r\n      return (<svg className={classes.icon} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M5.945 10.522v-4.506l-5.984 5.984 5.984 5.984v-4.506h18.094v-2.957h-18.094z\" />\r\n      </svg>);\r\n    case \"arrow_right\":\r\n      return (<svg className={classes.icon} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M18.055 10.522v-4.506l5.984 5.984-5.984 5.984v-4.506h-18.094v-2.957h18.094z\" />\r\n      </svg>);\r\n    case \"envelope\":\r\n      return (<svg className={classes.icon} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M3 7.921l8.427 5.899c0.34 0.235 0.795 0.246 1.147 0l8.426-5.899v10.079c0 0.272-0.11 0.521-0.295 0.705s-0.433 0.295-0.705 0.295h-16c-0.272 0-0.521-0.11-0.705-0.295s-0.295-0.433-0.295-0.705zM1 5.983c0 0.010 0 0.020 0 0.030v11.987c0 0.828 0.34 1.579 0.88 2.12s1.292 0.88 2.12 0.88h16c0.828 0 1.579-0.34 2.12-0.88s0.88-1.292 0.88-2.12v-11.988c0-0.010 0-0.020 0-0.030-0.005-0.821-0.343-1.565-0.88-2.102-0.541-0.54-1.292-0.88-2.12-0.88h-16c-0.828 0-1.579 0.34-2.12 0.88-0.537 0.537-0.875 1.281-0.88 2.103zM20.894 5.554l-8.894 6.225-8.894-6.225c0.048-0.096 0.112-0.183 0.188-0.259 0.185-0.185 0.434-0.295 0.706-0.295h16c0.272 0 0.521 0.11 0.705 0.295 0.076 0.076 0.14 0.164 0.188 0.259z\" />\r\n      </svg>);\r\n    case \"facebook\":\r\n      return (<svg className={classes.icon} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M23.998 12c0-6.628-5.372-12-11.999-12C5.372 0 0 5.372 0 12c0 5.988 4.388 10.952 10.124 11.852v-8.384H7.078v-3.469h3.046V9.356c0-3.008 1.792-4.669 4.532-4.669 1.313 0 2.686.234 2.686.234v2.953H15.83c-1.49 0-1.955.925-1.955 1.874V12h3.328l-.532 3.469h-2.796v8.384c5.736-.9 10.124-5.864 10.124-11.853z\" />\r\n      </svg>);\r\n    case \"github\":\r\n      return (<svg className={classes.icon} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\r\n      </svg>);\r\n    case \"instagram\":\r\n      return (<svg className={classes.icon} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913a5.885 5.885 0 001.384 2.126A5.868 5.868 0 004.14 23.37c.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558a5.898 5.898 0 002.126-1.384 5.86 5.86 0 001.384-2.126c.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913a5.89 5.89 0 00-1.384-2.126A5.847 5.847 0 0019.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227a3.81 3.81 0 01-.899 1.382 3.744 3.744 0 01-1.38.896c-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421a3.716 3.716 0 01-1.379-.899 3.644 3.644 0 01-.9-1.38c-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678a6.162 6.162 0 100 12.324 6.162 6.162 0 100-12.324zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405a1.441 1.441 0 01-2.88 0 1.44 1.44 0 012.88 0z\" />\r\n      </svg>);\r\n    case \"linkedin\":\r\n      return (<svg className={classes.icon} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433a2.062 2.062 0 01-2.063-2.065 2.064 2.064 0 112.063 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\" />\r\n      </svg>);\r\n    case \"twitter\":\r\n      return (<svg className={classes.icon} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M23.954 4.569a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.691 8.094 4.066 6.13 1.64 3.161a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.061a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.937 4.937 0 004.604 3.417 9.868 9.868 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63a9.936 9.936 0 002.46-2.548l-.047-.02z\" />\r\n      </svg>);\r\n    case \"youtube\":\r\n      return (<svg className={classes.icon} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M23.495 6.205a3.007 3.007 0 00-2.088-2.088c-1.87-.501-9.396-.501-9.396-.501s-7.507-.01-9.396.501A3.007 3.007 0 00.527 6.205a31.247 31.247 0 00-.522 5.805 31.247 31.247 0 00.522 5.783 3.007 3.007 0 002.088 2.088c1.868.502 9.396.502 9.396.502s7.506 0 9.396-.502a3.007 3.007 0 002.088-2.088 31.247 31.247 0 00.5-5.783 31.247 31.247 0 00-.5-5.805zM9.609 15.601V8.408l6.264 3.602z\" />\r\n      </svg>);\r\n    case \"menu\":\r\n      return (<svg className={classes.icon} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\" />\r\n      </svg>);\r\n    default:\r\n      return (\r\n        <UnknownComponent>Unknown icon</UnknownComponent>      );\r\n      }\r\n    }\r\n    export default Icon;\r\n","import React from \"react\";\r\nimport get from \"lodash.get\";\r\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, InputLabel, makeStyles, MenuItem, Select, TextField } from \"@material-ui/core\";\r\nimport UnknownComponent from \"./UnknownComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n  textArea: {\r\n    minWidth: 500\r\n  },\r\n  checkbox: {\r\n    paddingLeft: theme.spacing(1),\r\n  }\r\n}));\r\n\r\nfunction FormField(props) {\r\n  const classes = useStyles();\r\n  const [selectBoxValue, setSelectBoxValue] = React.useState('');\r\n\r\n  let field = get(props, \"field\", null);\r\n\r\n  let fieldComponent;\r\n\r\n  if (field._system_.type._system_.codename === \"base_form_field\") {\r\n\r\n    const isTextArea = get(field, \"type.items[0]._system_.codename\") === \"textarea\";\r\n    const isCheckbox = get(field, \"type.items[0]._system_.codename\") === \"checkbox\";\r\n    if (isCheckbox) {\r\n      fieldComponent = (\r\n        <FormGroup className={classes.checkbox}>\r\n          <FormControlLabel\r\n            control={<Checkbox name={get(field, \"name\", null)} />}\r\n            label={get(field, \"label\", null)}\r\n          />\r\n        </FormGroup>\r\n\r\n      );\r\n    }\r\n    else {\r\n      fieldComponent = (\r\n        <TextField\r\n          type={get(field, \"type[0]._system_.codename\")}\r\n          multiline={isTextArea ? true : false}\r\n          rows={isTextArea ? 4 : undefined}\r\n          label={get(field, \"label\", null)}\r\n          placeholder={get(field, \"defaultValue\", null)}\r\n          required={get(field, \"configuration.items\", []).some(config => config._system_.codename === \"required\")}\r\n          name={get(field, \"name\", null)}\r\n          className={`${classes.formControl} ${isTextArea ? classes.textArea : null}`}\r\n        />\r\n\r\n      );\r\n    }\r\n  }\r\n  else if (field._system_.type._system_.codename === \"select_form_field\") {\r\n    const handleChange = (event) => {\r\n      setSelectBoxValue(event.target.value);\r\n    };\r\n\r\n    fieldComponent = (\r\n      <FormControl\r\n        className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">{get(field, \"label\")}</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          onChange={handleChange}\r\n          value={selectBoxValue}\r\n        >\r\n          {get(field, \"options.items\", []).map(option => (\r\n            <MenuItem key={get(option, \"value\")} value={get(option, \"value\")}>{get(option, \"label\")}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    );\r\n  }\r\n  else {\r\n    fieldComponent = (\r\n      <UnknownComponent>\r\n        Unknown form component\r\n      </UnknownComponent>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {fieldComponent}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormField;\r\n","import parseHTML, { domToReact } from \"html-react-parser\";\r\n\r\nconst IMAGE_ID_ATTRIBUTE_IDENTIFIER = \"data-image-id\";\r\nconst LINKED_ITEM_ID_ATTRIBUTE_IDENTIFIER = \"data-item-id\";\r\n\r\n// TODO adjust naming and detection linked item vs. component - internal link https://kentico.atlassian.net/browse/DEL-3081\r\nfunction isLinkedItem(domNode) {\r\n  return domNode.name === \"object\" && domNode.attribs?.type === \"application/kenticocloud\";\r\n}\r\n\r\nfunction isImage(domNode) {\r\n  return domNode.name === \"figure\" && typeof domNode.attribs?.[IMAGE_ID_ATTRIBUTE_IDENTIFIER] !== \"undefined\";\r\n}\r\n\r\nfunction isLink(domNode) {\r\n  return domNode.name === \"a\" && typeof domNode.attribs?.[LINKED_ITEM_ID_ATTRIBUTE_IDENTIFIER] !== \"undefined\";\r\n}\r\n\r\n// TODO adjust naming and detection linked item vs. component - internal link https://kentico.atlassian.net/browse/DEL-3081\r\nfunction replaceNode(domNode, richTextElement, linkedItems, mappings, resolveLinkedItem, resolveImage, resolveLink, resolveDomNode) {\r\n  const { assets, itemHyperlinks } = richTextElement;\r\n\r\n  if (resolveLinkedItem && linkedItems) {\r\n    if (isLinkedItem(domNode)) {\r\n      const codeName = domNode.attribs?.[\"data-codename\"];\r\n      const linkedItem = linkedItems[codeName];\r\n      return resolveLinkedItem(linkedItem, domNode, domToReact);\r\n    }\r\n  }\r\n\r\n  if (resolveImage && assets) {\r\n    if (isImage(domNode)) {\r\n      const imageId = domNode.attribs?.[IMAGE_ID_ATTRIBUTE_IDENTIFIER];\r\n      const image = assets.items.find(image => image.imageId === imageId);\r\n      return resolveImage(image, domNode, domToReact);\r\n    }\r\n  }\r\n\r\n  if (resolveLink && itemHyperlinks?.items) {\r\n    if (isLink(domNode)) {\r\n      const linkId = domNode.attribs?.[LINKED_ITEM_ID_ATTRIBUTE_IDENTIFIER];\r\n      const link = itemHyperlinks.items.find(link => link._system_.id === linkId);\r\n      return resolveLink(link, mappings, domNode, domToReact);\r\n    }\r\n  }\r\n\r\n  if (resolveDomNode) {\r\n    return resolveDomNode(domNode, domToReact);\r\n  }\r\n}\r\n\r\n// TODO enhance this component to be able to consume components as well ass linked items - internal link https://kentico.atlassian.net/browse/DEL-3081\r\nfunction RichTextComponent({ richTextElement, mappings, resolveLinkedItem, resolveImage, resolveLink, resolveDomNode, className }) {\r\n  const cleanedValue = richTextElement.html.replace(/(\\n|\\r)+/, \"\");\r\n  // currenlty resolving only components\r\n  const linkedItems = richTextElement.components?.items.reduce((result, item) => {\r\n    result[item._system_.codename] = item;\r\n\r\n    return result;\r\n  },{}) || {};\r\n  const result = parseHTML(cleanedValue, {\r\n    replace: (domNode) => replaceNode(domNode, richTextElement, linkedItems, mappings, resolveLinkedItem, resolveImage, resolveLink, resolveDomNode),\r\n  });\r\n\r\n  return (\r\n    <div className={className} >\r\n      {result}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RichTextComponent;\r\n","import { makeStyles, Typography, useTheme } from \"@material-ui/core\";\r\nimport get from \"lodash.get\";\r\nimport { Image, Link } from \".\";\r\nimport { getUrlFromMapping } from \"../utils\";\r\nimport RichTextComponent from \"./RichTextComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  richText: {\r\n    \"& table\": {\r\n      borderCollapse: \"collapse\",\r\n      \"& td,th\": {\r\n        border: \"1px solid\",\r\n        borderColor: theme.palette.grey[500],\r\n        textAlign: \"center\",\r\n        padding: theme.spacing(1),\r\n      },\r\n      \"& tr:nth-child(even)\": {\r\n        backgroundColor: theme.palette.grey[100],\r\n      }\r\n    }\r\n  },\r\n  quote: {\r\n    fontStyle: \"italic\",\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    backgroundColor: theme.palette.grey[100],\r\n    display: \"inline-block\"\r\n  },\r\n  code: {\r\n    padding: theme.spacing(2),\r\n    backgroundColor: theme.palette.grey[100],\r\n    minWidth: \"50vw\",\r\n    display: \"inline-block\"\r\n  },\r\n  inlineImage: {\r\n    width: \"theme.breakpoints.values.sm\"\r\n  },\r\n}));\r\n\r\nfunction RichText(props) {\r\n  const richTextElement = get(props, \"richTextElement\", \"\");\r\n  const mappings = get(props, \"mappings\");\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <RichTextComponent\r\n      className={classes.richText}\r\n      richTextElement={richTextElement}\r\n      mappings={mappings}\r\n      // TODO adjust naming and detection linked item vs. component - internal link https://kentico.atlassian.net/browse/DEL-3081\r\n      resolveLinkedItem={(linkedItem, domNode, domToReact) => {\r\n        switch (linkedItem?._system_.type._system_.codename) {\r\n          case \"quote\":\r\n            return (\r\n              <blockquote className={classes.quote}>\r\n                &ldquo;{linkedItem.quoteText}&rdquo;\r\n              </blockquote>\r\n            );\r\n          case \"code_block\":\r\n            return (\r\n              <Typography component=\"div\" className={classes.code}>\r\n                <RichText\r\n                  {...props}\r\n                  richTextElement={get(linkedItem, \"code\", null)}\r\n                />\r\n              </Typography>\r\n            );\r\n          default:\r\n            return domToReact([domNode]);\r\n        }\r\n      }}\r\n      resolveImage={(image, _domNode, _domToReact) => {\r\n        return (\r\n          <div className={classes.inlineImage}>\r\n            <Image\r\n              sizes={`${theme.breakpoints.values.sm}px`}\r\n              asset={image}\r\n              width={theme.breakpoints.values.sm}\r\n              alt={image.description || image.name} />\r\n          </div>\r\n        );\r\n      }}\r\n      resolveLink={(link, mappings, domNode, domToReact) => {\r\n        const url = getUrlFromMapping(mappings, link._system_.codename);\r\n        if (url) {\r\n          return (\r\n            <Link href={url}>\r\n              {domNode.children[0].data}\r\n            </Link>\r\n          );\r\n        }\r\n        else {\r\n          return (\r\n            <del>{domToReact([domNode])}</del>\r\n          );\r\n        }\r\n      }}\r\n      resolveDomNode={(domNode, _domToReact) => {\r\n        return domNode;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default RichText;\r\n","export default function getUrlFromMapping(mappings, codename) {\r\n  return Object.keys(mappings).find(key => mappings[key].navigationCodename === codename);\r\n}\r\n","import React from \"react\";\r\nimport get from \"lodash.get\";\r\nimport Action from \"./Action\";\r\n\r\nfunction CtaButtons(props) {\r\n    const actions = get(props, \"actions\", []);\r\n\r\n    return (actions.map((action, action_idx) => {\r\n            return (\r\n                <Action key={action_idx} action={action} />\r\n            );\r\n        })\r\n    );\r\n}\r\n\r\nexport default CtaButtons;\r\n","export default function GraphQLLoader(props) {\r\n  if (props.error) {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      console.error(`Error while fetching data: ${props.error}`);\r\n      return (\r\n        <div>\r\n          <h2>Error</h2>\r\n          <pre>{JSON.stringify(props.error, undefined, 2)}</pre>\r\n        </div>\r\n      );\r\n    }\r\n    return <h2>Error while fetching data</h2>;\r\n  }\r\n\r\n  if (props.loading) {\r\n    return \"loading...\";\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { gql } from \"@apollo/client\";\n\nconst richTextAssetFields = gql`\n  fragment RichTextAssetFields on _RichTextAsset {\n    url\n    name\n    description\n    imageId\n  }\n`;\n\nexport const assetFields = gql`\n  fragment AssetFields on _Asset {\n    url\n    name\n    description\n  }\n`;\n\nexport const subpageNavigationItemFields = gql`\n  fragment SubpageNavigationItemFields on NavigationItem {\n    _system_ {\n      codename\n    }\n    slug\n    content {\n      # https://github.com/apollographql/apollo-client/issues/7648#issuecomment-968969367\n      ... on SimplePage {\n        _system_ {\n          codename\n          type {\n            _system_ {\n              codename\n            }\n          }\n        }\n      }\n      ... on LandingPage {\n        _system_ {\n          codename\n          type {\n            _system_ {\n              codename\n            }\n          }\n        }\n      }\n      ... on ListingPage {\n        _system_ {\n          codename\n          type {\n            _system_ {\n              codename\n            }\n          }\n        }\n        contentType\n      }\n    }\n  }\n`;\n\nexport const richTextFields = gql`\n  fragment RichTextFields on _RichText {\n    itemHyperlinks {\n      items {\n        _system_ {\n          id\n          codename\n          type {\n            _system_ {\n              codename\n            }\n          }\n        }\n      }\n    }\n    html\n    assets {\n      items {\n        ...RichTextAssetFields\n      }\n    }\n    components {\n      items {\n        _system_ {\n          id\n          codename\n          type {\n            _system_ {\n              codename\n            }\n          }\n        }\n        ... on Quote {\n          quoteText\n        }\n        ... on CodeBlock {\n          code {\n            html\n          }\n        }\n      }\n    }\n  }\n\n  ${richTextAssetFields}\n`;\n\nexport const seoFields = gql`\n  fragment SeoFields on Seo {\n    canonicalUrl\n    description\n    keywords\n    options {\n      items {\n        _system_ {\n          codename\n        }\n      }\n    }\n    title\n  }\n`;\n\nexport const actionFields = gql`\n  fragment ActionFields on Action {\n    _system_ {\n      codename\n    }\n    label\n    navigationItem {\n      # https://github.com/apollographql/apollo-client/issues/7648#issuecomment-968969367\n      ... on ExternalUrl {\n        _system_ {\n          type {\n            _system_ {\n              codename\n            }\n          }\n        }\n        url\n      }\n      ... on NavigationItem {\n        _system_ {\n          type {\n            _system_ {\n              codename\n            }\n          }\n        }\n        _seo {\n          ...SeoFields\n        }\n        label\n        slug\n        content {\n          # https://github.com/apollographql/apollo-client/issues/7648#issuecomment-968969367\n          ... on SimplePage {\n            _system_ {\n              codename\n              type {\n                _system_ {\n                  codename\n                }\n              }\n            }\n          }\n          ... on LandingPage {\n            _system_ {\n              codename\n              type {\n                _system_ {\n                  codename\n                }\n              }\n            }\n          }\n          ... on ListingPage {\n            _system_ {\n              codename\n              type {\n                _system_ {\n                  codename\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    options {\n      items {\n        _system_ {\n          codename\n        }\n      }\n    }\n    role {\n      items {\n        _system_ {\n          codename\n        }\n      }\n    }\n    icon {\n      ... on Icon {\n        iconPosition {\n          items {\n            _system_ {\n              codename\n            }\n          }\n        }\n        _system_ {\n          codename\n        }\n        icon {\n          items {\n            _system_ {\n              codename\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ${seoFields}\n`;\n","import get from 'lodash.get';\r\n\r\nexport default function getSeo(seo) {\r\n  const description = get(seo, \"description\", null); // pageProps\r\n  const keyWords = get(seo, \"keywords\", null); // pageProps\r\n  const canonicalUrl = get(seo, \"canonicalUrl\", null); // pageProps\r\n  const noIndex = get(seo, \"noIndex\", null); // pageProps\r\n  const title = get(seo, \"title\", null);\r\n\r\n  return {\r\n    description,\r\n    keyWords,\r\n    canonicalUrl,\r\n    noIndex,\r\n    title\r\n  }\r\n}\r\n","import get from \"lodash.get\";\r\nimport { Image, Layout, RichText, GraphQLLoader } from \"./components\";\r\nimport { Container, makeStyles, Typography, useTheme } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { assetFields, seoFields, richTextFields } from \"./graphQLFragments\";\r\nimport getSeo from \"./utils/getSeo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nfunction Post(props) {\r\n  const postPageQuery = gql`\r\n    query PostPageQuery($codename: String!) {\r\n      post(codename: $codename) {\r\n        _seo {\r\n          ...SeoFields\r\n        }\r\n        _system_ {\r\n          type {\r\n            _system_ {\r\n              codename\r\n            }\r\n          }\r\n        }\r\n        image {\r\n          ...AssetFields\r\n        }\r\n        title\r\n        publishingDate\r\n        author {\r\n          firstName\r\n          lastName\r\n        }\r\n        subtitle\r\n        content {\r\n          ...RichTextFields\r\n        }\r\n      }\r\n    }\r\n\r\n    ${seoFields}\r\n    ${assetFields}\r\n    ${richTextFields}\r\n  `;\r\n\r\n  const [post, setPost] = useState(null);\r\n  const [seo, setSeo] = useState(null);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const imageSizes = `${theme.breakpoints.values.md}px`;\r\n\r\n  const { loading, error } = useQuery(\r\n    postPageQuery,\r\n    {\r\n      variables: { codename: props.codename },\r\n      onCompleted: (data) => {\r\n        setPost(data.post);\r\n        setSeo(getSeo(data.post._seo));\r\n      },\r\n    },\r\n    [props.codename]\r\n  );\r\n\r\n  if (error || loading || !post) {\r\n    return <GraphQLLoader error={error} loading={loading} />;\r\n  }\r\n\r\n  return (\r\n    <Layout {...props} seo={seo}>\r\n      <Container className={classes.root} maxWidth=\"md\">\r\n        {get(post, \"title\", null) && (\r\n          <Typography variant=\"h1\">{get(post, \"title\", null)}</Typography>\r\n        )}\r\n        {get(post, \"subtitle\", null) && (\r\n          <Typography variant=\"subtitle1\">\r\n            {get(post, \"subtitle\", null)}\r\n          </Typography>\r\n        )}\r\n\r\n        {get(post, \"image\", null) && (\r\n          <div>\r\n            <Image\r\n              sizes={imageSizes}\r\n              asset={get(post, \"image\", null)}\r\n              alt={\r\n                get(post, \"image.description\") ||\r\n                get(post, \"image.name\", null)\r\n              }\r\n            />\r\n          </div>\r\n        )}\r\n        <Typography component=\"div\">\r\n          <RichText {...props} richTextElement={get(post, \"content\", null)} />\r\n        </Typography>\r\n\r\n        <footer>\r\n          <time>\r\n            {get(post, \"publishingDate\", null) &&\r\n              new Date(get(post, \"publishingDate\", null)).toDateString()}\r\n          </time>\r\n          {get(post, \"author\", null) &&\r\n            \", by \" +\r\n              get(post, \"author.firstName\", null) +\r\n              \" \" +\r\n              get(post, \"author.lastName\", null)}\r\n        </footer>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport get from \"lodash.get\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  actionFields,\r\n  assetFields,\r\n  richTextFields,\r\n} from \"../../graphQLFragments\";\r\nimport { CtaButtons, GraphQLLoader, Image, RichText } from \"..\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  section: {\r\n    background: `linear-gradient(to right,${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  column: {\r\n    margin: \"auto\",\r\n    color: theme.palette.primary.contrastText,\r\n    background: \"transparent\",\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    paddingTop: theme.spacing(2),\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n}));\r\n\r\nfunction HeroSection(props) {\r\n  const query = gql`\r\n    query HeroSectionQuery($codename: String!, $languageCodename: String!) {\r\n      heroSection(\r\n        codename: $codename\r\n        languageFilter: { languageCodename: $languageCodename }\r\n      ) {\r\n        image {\r\n          ...AssetFields\r\n        }\r\n        title\r\n        content {\r\n          ...RichTextFields\r\n        }\r\n        actions {\r\n          items {\r\n            ...ActionFields\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    ${richTextFields}\r\n    ${assetFields}\r\n    ${actionFields}\r\n  `;\r\n\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const imageSizes = `(min-width: ${theme.breakpoints.values.sm}px) 40vw, 100vw`;\r\n  const [section, setSection] = useState(null);\r\n\r\n  const { loading, error } = useQuery(\r\n    query,\r\n    {\r\n      variables: {\r\n        codename: props.section._system_.codename,\r\n        languageCodename: props.section._system_.language._system_.codename,\r\n      },\r\n      onCompleted: (data) => {\r\n        setSection(data.heroSection);\r\n      },\r\n    },\r\n    [props.section.codename, props.section.languageCodename]\r\n  );\r\n\r\n  if (error || loading || !section) {\r\n    return <GraphQLLoader error={error} loading={loading} />;\r\n  }\r\n\r\n  return (\r\n    <section\r\n      id={get(section, \"_system_.codename\", null)}\r\n      className={classes.section}\r\n    >\r\n      <Container>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          alignItems=\"stretch\"\r\n          direction=\"row-reverse\"\r\n        >\r\n          {get(section, \"image\", null) && (\r\n            <Grid item xs={12} sm={6} className={classes.column}>\r\n              <Image\r\n                sizes={imageSizes}\r\n                asset={get(section, \"image\", null)}\r\n                alt={\r\n                  get(section, \"image.description\") ||\r\n                  get(section, \"image.name\")\r\n                }\r\n                loading=\"eager\"\r\n              />\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12} sm={4} className={classes.column}>\r\n            {get(section, \"title\", null) && (\r\n              <Typography variant=\"h2\">\r\n                {get(section, \"title\", null)}\r\n              </Typography>\r\n            )}\r\n\r\n            <Typography variant=\"subtitle1\" className={classes.content}>\r\n              <RichText\r\n                {...props}\r\n                richTextElement={get(section, \"content\", null)}\r\n              />\r\n            </Typography>\r\n\r\n            {get(section, \"actions.items[0]\", null) && (\r\n              <div className={classes.actions}>\r\n                <CtaButtons\r\n                  {...props}\r\n                  actions={get(section, \"actions.items\", [])}\r\n                />\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default HeroSection;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  actionFields,\r\n  assetFields,\r\n  richTextFields,\r\n} from \"../../graphQLFragments\";\r\nimport get from \"lodash.get\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { CtaButtons, GraphQLLoader, Image, RichText } from \"..\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  section: {\r\n    padding: theme.spacing(8),\r\n  },\r\n  row: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  image: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  intro: {\r\n    textAlign: \"center\",\r\n  },\r\n  alignRight: {\r\n    textAlign: \"right\",\r\n  },\r\n}));\r\n\r\nfunction FeaturesSection(props) {\r\n  const query = gql`\r\n    query FeaturesSectionQuery($codename: String!, $languageCodename: String!) {\r\n      featuresSection(\r\n        codename: $codename\r\n        languageFilter: { languageCodename: $languageCodename }\r\n      ) {\r\n        title\r\n        subtitle {\r\n          ...RichTextFields\r\n        }\r\n        features(limit: 5) {\r\n          items {\r\n            ... on Feature {\r\n              image {\r\n                ...AssetFields\r\n              }\r\n              title\r\n              content {\r\n                ...RichTextFields\r\n              }\r\n              actions {\r\n                items {\r\n                  ...ActionFields\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    ${richTextFields}\r\n    ${assetFields}\r\n    ${actionFields}\r\n  `;\r\n\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const imageSizes = `(min-width: ${theme.breakpoints.values.sm}px) 40vw, 100vw`;\r\n\r\n  const [section, setSection] = useState(null);\r\n\r\n  const { loading, error } = useQuery(\r\n    query,\r\n    {\r\n      variables: {\r\n        codename: props.section._system_.codename,\r\n        languageCodename: props.section._system_.language._system_.codename,\r\n      },\r\n      onCompleted: (data) => {\r\n        setSection(data.featuresSection);\r\n      },\r\n    },\r\n    [props.section.codename, props.section.languageCodename]\r\n  );\r\n\r\n  if (error || loading || !section) {\r\n    return <GraphQLLoader error={error} loading={loading} />;\r\n  }\r\n  return (\r\n    <section\r\n      id={get(section, \"_system_.codename\", null)}\r\n      className={classes.section}\r\n    >\r\n      <Container>\r\n        <div className={classes.intro}>\r\n          {get(section, \"title\", null) && (\r\n            <Typography variant=\"h2\">{get(section, \"title\", null)}</Typography>\r\n          )}\r\n\r\n          {get(section, \"subtitle\", null) && (\r\n            <Typography variant=\"subtitle1\">\r\n              <RichText\r\n                {...props}\r\n                richTextElement={get(section, \"subtitle\", null)}\r\n              />\r\n            </Typography>\r\n          )}\r\n        </div>\r\n\r\n        {get(section, \"features.items[0]\", null) &&\r\n          get(section, \"features.items\", []).map((feature, index) => (\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              alignItems=\"center\"\r\n              key={index}\r\n              direction={index % 2 ? \"row-reverse\" : \"row\"}\r\n              className={classes.row}\r\n            >\r\n              {get(feature, \"image\", null) && (\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={6}\r\n                  className={`${classes.column}, ${classes.image}`}\r\n                >\r\n                  <Image\r\n                    sizes={imageSizes}\r\n                    asset={get(feature, \"image\", null)}\r\n                    alt={\r\n                      get(feature, \"image.description\") ||\r\n                      get(feature, \"image.name\")\r\n                    }\r\n                  />\r\n                </Grid>\r\n              )}\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                sm={4}\r\n                className={`${classes.column} ${\r\n                  index % 2 ? classes.alignRight : undefined\r\n                }`}\r\n              >\r\n                <Typography variant=\"h3\">\r\n                  {get(feature, \"title\", null)}\r\n                </Typography>\r\n\r\n                <RichText\r\n                  component=\"div\"\r\n                  {...props}\r\n                  richTextElement={get(feature, \"content\", null)}\r\n                />\r\n\r\n                {get(feature, \"actions.items[0]\", null) && (\r\n                  <CtaButtons actions={get(feature, \"actions.items\", [])} />\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default FeaturesSection;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  actionFields,\r\n  richTextFields,\r\n} from \"../../graphQLFragments\";\r\nimport get from \"lodash.get\";\r\nimport { Container, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { Action, GraphQLLoader, RichText } from \"..\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  section: {\r\n    background: `linear-gradient(to right,${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n}));\r\n\r\nfunction CtaSection(props) {\r\n  const query = gql`\r\n    query CtaSectionQuery($codename: String!, $languageCodename: String!) {\r\n      ctaSection(\r\n        codename: $codename\r\n        languageFilter: { languageCodename: $languageCodename }\r\n      ) {\r\n        title\r\n        subtitle {\r\n          ...RichTextFields\r\n        }\r\n        action {\r\n          ...ActionFields\r\n        }\r\n      }\r\n    }\r\n\r\n    ${richTextFields}\r\n    ${actionFields}\r\n  `;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [section, setSection] = useState(null);\r\n\r\n  const { loading, error } = useQuery(\r\n    query,\r\n    {\r\n      variables: {\r\n        codename: props.section._system_.codename,\r\n        languageCodename: props.section._system_.language._system_.codename,\r\n      },\r\n      onCompleted: (data) => {\r\n        setSection(data.ctaSection);\r\n      },\r\n    },\r\n    [props.section.codename, props.section.languageCodename]\r\n  );\r\n\r\n  if (error || loading || !section) {\r\n    return <GraphQLLoader error={error} loading={loading} />;\r\n  }\r\n\r\n  return (\r\n    <section\r\n      id={get(section, \"_system_.codename\", null)}\r\n      className={classes.section}\r\n    >\r\n      <Container>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12} sm={6}>\r\n            <div className={classes.intro}>\r\n              {get(section, \"title\", null) && (\r\n                <Typography variant=\"h2\">\r\n                  {get(section, \"title\", null)}\r\n                </Typography>\r\n              )}\r\n              {get(section, \"subtitle\", null) && (\r\n                <Typography variant=\"subtitle1\" className={classes.content}>\r\n                  <RichText\r\n                    {...props}\r\n                    richTextElement={get(section, \"subtitle\", null)}\r\n                  />\r\n                </Typography>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Action {...props} action={get(section, \"action\")} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CtaSection;\r\n","import React from \"react\";\r\nimport get from \"lodash.get\";\r\nimport { Image, Link } from \"..\";\r\nimport { useTheme } from \"@material-ui/core\";\r\n\r\nfunction Post(props) {\r\n  let post = get(props, \"item\", null);\r\n  let columnCount = get(props, \"columnCount\", 1);\r\n  let postUrl = \"/blog/\" + get(post, \"slug\", \"#\");\r\n\r\n  const theme = useTheme();\r\n  const imageSizes = `(min-width: ${theme.breakpoints.values.md}px) ${Math.floor(100 / columnCount)}vw, 100vw`;\r\n  const image = get(post, \"image\", null);\r\n  const title = get(post, \"title\", null);\r\n  const excerpt = get(post, \"excerpt\", null);\r\n  const publishingDate = get(post, \"publishingDate\", null);\r\n  const author = get(post, \"author\", null);\r\n  return (\r\n    <article>\r\n      <div>\r\n        {image && (\r\n          <Link href={postUrl}>\r\n            <Image\r\n              sizes={imageSizes}\r\n              asset={image}\r\n              alt={image.description || image.name || null} />\r\n          </Link>\r\n        )}\r\n        <div>\r\n          <header>\r\n            <h3><Link href={postUrl}>{title}</Link></h3>\r\n          </header>\r\n          <div>\r\n            <p>{excerpt}</p>\r\n          </div>\r\n          <footer>\r\n            <time>{publishingDate && new Date(publishingDate).toDateString()}</time>\r\n            {author && `, by ${author.firstName} ${author.lastName}`}\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React, { useState } from \"react\";\r\nimport get from \"lodash.get\";\r\nimport upperFirst from \"lodash.upperfirst\";\r\nimport camelCase from \"lodash.camelcase\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport * as thumbnails from \"../thumbnails\";\r\nimport { RichText, UnknownComponent, GraphQLLoader } from \"..\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { assetFields } from \"../../graphQLFragments\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  section: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  intro: {\r\n    textAlign: \"center\",\r\n  },\r\n  itemCard: {\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nfunction ListingSection(props) {\r\n  \r\n  const listingSectionQuery = gql`\r\n    query ListingSectionQuery($limit: Int) {\r\n      post_All(limit: $limit) {\r\n        items {\r\n          _system_ {\r\n            type {\r\n              _system_ {\r\n                codename\r\n              }\r\n            }\r\n          }\r\n          image {\r\n            ...AssetFields\r\n          }\r\n          slug\r\n          title\r\n          excerpt\r\n          publishingDate\r\n          author {\r\n            ... on Author {\r\n              firstName\r\n              lastName\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    ${assetFields}\r\n  `;\r\n\r\n  const section = get(props, \"section\", null);\r\n  const classes = useStyles();\r\n\r\n  const [relatedItemsData, setRelatedItemsData] = useState(null);\r\n\r\n  const { loading, error } = useQuery(\r\n    listingSectionQuery,\r\n    {\r\n      variables: { limit: props.section.numberOfItems },\r\n      onCompleted: (data) => {\r\n        setRelatedItemsData(data[`${props.section.contentType}_All`].items);\r\n      },\r\n    },\r\n    [props.section.numberOfItems, props.section.contentType]\r\n  );\r\n\r\n  if (error || loading || !relatedItemsData) {\r\n    return <GraphQLLoader error={error} loading={loading} />;\r\n  }\r\n\r\n  return (\r\n    <section\r\n      id={get(section, \"_system_.codename\", null)}\r\n      className={classes.section}\r\n    >\r\n      <Container>\r\n        <div className={classes.intro}>\r\n          {get(section, \"title\", null) && (\r\n            <Typography variant=\"h2\">{get(section, \"title\", null)}</Typography>\r\n          )}\r\n          {get(section, \"subtitle\", null) && (\r\n            <Typography variant=\"subtitle1\">\r\n              <RichText\r\n                {...props}\r\n                richTextElement={get(section, \"subtitle\", null)}\r\n              />\r\n            </Typography>\r\n          )}\r\n        </div>\r\n\r\n        {relatedItemsData.length > 0 && (\r\n          <Grid container spacing={2} alignItems=\"stretch\">\r\n            {relatedItemsData.map((item, item_idx) => {\r\n              const contentType = upperFirst(\r\n                camelCase(get(item, \"_system_.type._system_.codename\", null))\r\n              );\r\n              const ThumbnailLayout = thumbnails[contentType];\r\n\r\n              if (process.env.NODE_ENV === \"development\" && !ThumbnailLayout) {\r\n                console.error(\r\n                  `Unknown section component for section content type: ${contentType}`\r\n                );\r\n                return (\r\n                  <Grid item md={4} sm={12} key={item_idx}>\r\n                    <UnknownComponent key={item_idx} {...props}>\r\n                      <pre>{JSON.stringify(item, undefined, 2)}</pre>\r\n                    </UnknownComponent>\r\n                  </Grid>\r\n                );\r\n              }\r\n\r\n              return (\r\n                <Grid item md={4} sm={12} key={item_idx}>\r\n                  <Card className={classes.itemCard}>\r\n                    <CardContent>\r\n                      <ThumbnailLayout\r\n                        key={item_idx}\r\n                        {...props}\r\n                        item={item}\r\n                        columnCount={3}\r\n                      />\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        )}\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ListingSection;\r\n","import React, { useState } from \"react\";\r\nimport get from \"lodash.get\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  actionFields,\r\n  assetFields,\r\n  richTextFields,\r\n} from \"../../graphQLFragments\";\r\nimport { CtaButtons, GraphQLLoader, Image, RichText } from \"..\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  section: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  column: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  actions: {\r\n    \"& a\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction ContentSection(props) {\r\n  const query = gql`\r\n    query ContentSectionQuery($codename: String!, $languageCodename: String!) {\r\n      contentSection(\r\n        codename: $codename\r\n        languageFilter: { languageCodename: $languageCodename }\r\n      ) {\r\n        image {\r\n          ...AssetFields\r\n        }\r\n        title\r\n        content {\r\n          ...RichTextFields\r\n        }\r\n        actions {\r\n          items {\r\n            ...ActionFields\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    ${richTextFields}\r\n    ${assetFields}\r\n    ${actionFields}\r\n  `;\r\n\r\n  const classes = useStyles();\r\n\r\n  const theme = useTheme();\r\n  const imageSizes = `(min-width: ${theme.breakpoints.values.sm}px) 50vw, 100vw`;\r\n\r\n  const [section, setSection] = useState(null);\r\n  const { loading, error } = useQuery(\r\n    query,\r\n    {\r\n      variables: {\r\n        codename: props.section._system_.codename,\r\n        languageCodename: props.section._system_.language._system_.codename,\r\n      },\r\n      onCompleted: (data) => {\r\n        setSection(data.heroSection);\r\n      },\r\n    },\r\n    [props.section.codename, props.section.languageCodename]\r\n  );\r\n\r\n  if (error || loading || !section) {\r\n    return <GraphQLLoader error={error} loading={loading} />;\r\n  }\r\n\r\n  return (\r\n    <section\r\n      id={get(section, \"_system_.codename\", null)}\r\n      className={classes.section}\r\n    >\r\n      <Container>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          alignItems=\"stretch\"\r\n          direction=\"row-reverse\"\r\n        >\r\n          {get(section, \"image\", null) && (\r\n            <Grid item xs={12} sm={6} className={classes.column}>\r\n              <Image\r\n                sizes={imageSizes}\r\n                asset={get(section, \"image\", null)}\r\n                alt={\r\n                  get(section, \"image.description\") ||\r\n                  get(section, \"image.name\")\r\n                }\r\n              />\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={get(section, \"title\", null) ? 6 : 12}\r\n            className={classes.column}\r\n          >\r\n            {get(section, \"title\", null) && (\r\n              <Typography variant=\"h2\">\r\n                {get(section, \"title\", null)}\r\n              </Typography>\r\n            )}\r\n\r\n            <Typography variant=\"subtitle1\" className={classes.content}>\r\n              <RichText\r\n                {...props}\r\n                richTextElement={get(section, \"content\", null)}\r\n              />\r\n            </Typography>\r\n\r\n            {get(section, \"actions.items[0]\", null) && (\r\n              <div className={classes.actions}>\r\n                <CtaButtons\r\n                  {...props}\r\n                  actions={get(section, \"actions.items\", [])}\r\n                />\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ContentSection;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  richTextFields,\r\n} from \"../../graphQLFragments\";\r\nimport get from \"lodash.get\";\r\nimport { Button, Container, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { FormField, GraphQLLoader, RichText } from \"..\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formSubmission: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction ContactSection(props) {\r\n  const query = gql`\r\n    query ContactSectionQuery($codename: String!, $languageCodename: String!) {\r\n      contactSection(\r\n        codename: $codename\r\n        languageFilter: { languageCodename: $languageCodename }\r\n      ) {\r\n        title\r\n        subtitle {\r\n          ...RichTextFields\r\n        }\r\n        content {\r\n          ...RichTextFields\r\n        }\r\n        form {\r\n          ... on Form {\r\n            formId\r\n            formAction\r\n            submitLabel\r\n            fields {\r\n              items {\r\n                ... on BaseFormField {\r\n                  _system_ {\r\n                    type {\r\n                      _system_ {\r\n                        codename\r\n                      }\r\n                    }\r\n                  }\r\n                  type {\r\n                    items {\r\n                      _system_ {\r\n                        codename\r\n                      }\r\n                    }\r\n                  }\r\n                  name\r\n                  label\r\n                  defaultValue\r\n                  configuration {\r\n                    items {\r\n                      _system_ {\r\n                        codename\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                ... on SelectFormField {\r\n                  _system_ {\r\n                    type {\r\n                      _system_ {\r\n                        codename\r\n                      }\r\n                    }\r\n                  }\r\n                  label\r\n                  options {\r\n                    items {\r\n                      ... on SelectFormFieldOption {\r\n                        label\r\n                        value\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    ${richTextFields}\r\n  `;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [section, setSection] = useState(null);\r\n\r\n  const { loading, error } = useQuery(\r\n    query,\r\n    {\r\n      variables: {\r\n        codename: props.section._system_.codename,\r\n        languageCodename: props.section._system_.language._system_.codename,\r\n      },\r\n      onCompleted: (data) => {\r\n        setSection(data.contactSection);\r\n      },\r\n    },\r\n    [props.section.codename, props.section.languageCodename]\r\n  );\r\n\r\n  if (error || loading || !section) {\r\n    return <GraphQLLoader error={error} loading={loading} />;\r\n  }\r\n\r\n  return (\r\n    <section\r\n      id={get(section, \"_system_.codename\", null)}\r\n      className={classes.section}\r\n    >\r\n      <Container>\r\n        <div className={classes.intro}>\r\n          {get(section, \"title\", null) && (\r\n            <Typography variant=\"h2\">{get(section, \"title\", null)}</Typography>\r\n          )}\r\n          {get(section, \"subtitle\", null) && (\r\n            <Typography variant=\"subtitle1\">\r\n              <RichText\r\n                {...props}\r\n                richTextElement={get(section, \"subtitle\", null)}\r\n              />\r\n            </Typography>\r\n          )}\r\n        </div>\r\n\r\n        <Typography component=\"div\">\r\n          <RichText\r\n            {...props}\r\n            richTextElement={get(section, \"content\", null)}\r\n          />\r\n        </Typography>\r\n\r\n        {section.form && (\r\n          <form\r\n            name={get(section.form, \"formId\", null)}\r\n            id={get(section.form, \"formId\", null)}\r\n            action={get(section.form, \"formAction\", null)}\r\n            method=\"POST\"\r\n          >\r\n            {get(section.form, \"fields.items\", []).map((field, field_idx) => (\r\n              <FormField field={field} key={field_idx} />\r\n            ))}\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.formSubmission}\r\n            >\r\n              {get(section.form, \"submitLabel\", null)}\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ContactSection;\r\n","import get from \"lodash.get\";\r\nimport upperFirst from \"lodash.upperfirst\";\r\nimport camelCase from \"lodash.camelcase\";\r\nimport { Layout, UnknownComponent, GraphQLLoader } from \"./components\";\r\nimport * as sections from \"./components/sections\";\r\nimport { Box, makeStyles } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { richTextFields, seoFields } from \"./graphQLFragments\";\r\nimport getSeo from \"./utils/getSeo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sections: {\r\n    \"& > section:first-child\": {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction LandingPage(props) {\r\n  const landingPageFields = gql`\r\n    fragment LandingPageFields on LandingPage {\r\n      sections {\r\n        items {\r\n          # https://github.com/apollographql/apollo-client/issues/7648#issuecomment-968969367\r\n          ... on CtaSection {\r\n            _system_ {\r\n              codename\r\n              language {\r\n                _system_ {\r\n                  codename\r\n                }\r\n              }\r\n              type {\r\n                _system_ {\r\n                  codename\r\n                }\r\n              }\r\n            }\r\n          }\r\n          ... on FeaturesSection {\r\n            _system_ {\r\n              codename\r\n              language {\r\n                _system_ {\r\n                  codename\r\n                }\r\n              }\r\n              type {\r\n                _system_ {\r\n                  codename\r\n                }\r\n              }\r\n            }\r\n          }\r\n          ... on ContactSection {\r\n            _system_ {\r\n              codename\r\n              language {\r\n                _system_ {\r\n                  codename\r\n                }\r\n              }\r\n              type {\r\n                _system_ {\r\n                  codename\r\n                }\r\n              }\r\n            }\r\n          }\r\n          ... on HeroSection {\r\n            _system_ {\r\n              codename\r\n              language {\r\n                _system_ {\r\n                  codename\r\n                }\r\n              }\r\n              type {\r\n                _system_ {\r\n                  codename\r\n                }\r\n              }\r\n            }\r\n          }\r\n          ... on ContentSection {\r\n            _system_ {\r\n              codename\r\n              language {\r\n                _system_ {\r\n                  codename\r\n                }\r\n              }\r\n              type {\r\n                _system_ {\r\n                  codename\r\n                }\r\n              }\r\n            }\r\n          }\r\n          ... on ListingSection {\r\n            _system_ {\r\n              codename\r\n              language {\r\n                _system_ {\r\n                  codename\r\n                }\r\n              }\r\n              type {\r\n                _system_ {\r\n                  codename\r\n                }\r\n              }\r\n            }\r\n            title\r\n            subtitle {\r\n              ...RichTextFields\r\n            }\r\n            orderBy\r\n            contentType\r\n            numberOfItems\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    ${richTextFields}\r\n  `;\r\n\r\n  const landingPageQuery = gql`\r\n    query LandingPageQuery($codename: String!) {\r\n      landingPage(codename: $codename) {\r\n        ...LandingPageFields\r\n      }\r\n    }\r\n    ${landingPageFields}\r\n  `;\r\n\r\n  const navigationAndLandingPageQuery = gql`\r\n    query NavigationAndLandingPageQuery($codename: String!) {\r\n      navigationItem(codename: $codename) {\r\n        _seo {\r\n          ...SeoFields\r\n        }\r\n        content {\r\n          ... on LandingPage {\r\n            ...LandingPageFields\r\n          }\r\n        }\r\n      }\r\n    }\r\n    ${landingPageFields}\r\n    ${seoFields}\r\n  `;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [sectionItems, setSectionItems] = useState(null);\r\n  const [seo, setSeo] = useState({});\r\n\r\n  const { loading, error } = useQuery(\r\n    props.seo ? landingPageQuery : navigationAndLandingPageQuery,\r\n    {\r\n      variables: { codename: props.codename },\r\n      onCompleted: (data) => {\r\n        if (props.seo) {\r\n          setSectionItems(data.landingPage.sections.items);\r\n          setSeo(props.seo);\r\n        } else {\r\n          setSectionItems(data.navigationItem.content.sections.items);\r\n          setSeo(getSeo(data.navigationItem._seo));\r\n        }\r\n      },\r\n    },\r\n    [props.codename, props.seo]\r\n  );\r\n\r\n  if (error || loading || !sectionItems) {\r\n    return <GraphQLLoader error={error} loading={loading} />;\r\n  }\r\n\r\n  return (\r\n    <Layout {...props} seo={seo}>\r\n      <Box className={classes.sections}>\r\n        {sectionItems.map((section, index) => {\r\n          const contentType = upperFirst(\r\n            camelCase(get(section, \"_system_.type._system_.codename\", null))\r\n          );\r\n          const Component = sections[contentType];\r\n\r\n          if (process.env.NODE_ENV === \"development\" && !Component) {\r\n            console.error(\r\n              `Unknown section component for section content type: ${contentType}`\r\n            );\r\n            return (\r\n              <UnknownComponent key={index} {...props}>\r\n                <pre>{JSON.stringify(section, undefined, 2)}</pre>\r\n              </UnknownComponent>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <Component\r\n              key={index}\r\n              {...props}\r\n              section={section}\r\n              site={props}\r\n            />\r\n          );\r\n        })}\r\n      </Box>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","const pageSize = 3;\r\nconst authorQueryStringKey = \"author\";\r\nconst personaQueryStringKey = \"persona\";\r\nconst pageQueryStringKey = \"page\";\r\n\r\nconst setPageAndReturnQueryString = (page, urlParams) => {\r\n  urlParams.set(pageQueryStringKey, page > 0 ? page : 1);\r\n\r\n  return `?${urlParams}`;\r\n}\r\n\r\nexport const getListingPaginationAndFilter = (location) => {\r\n  const urlParams = new URLSearchParams(location.search);\r\n  const authorQuery = urlParams.get(authorQueryStringKey);\r\n  const personaQuery = urlParams.get(personaQueryStringKey);\r\n  const pageQuery = urlParams.get(pageQueryStringKey);\r\n  let pageNumber = parseInt(pageQuery);\r\n\r\n  pageNumber = pageNumber > 0 ? pageNumber : 1;\r\n\r\n  return {\r\n    author: authorQuery,\r\n    persona: personaQuery,\r\n    nextPage: `${location.pathname}${setPageAndReturnQueryString(pageNumber + 1, urlParams)}`,\r\n    prevPage: `${location.pathname}${setPageAndReturnQueryString(pageNumber - 1, urlParams)}`,\r\n    limit: pageSize,\r\n    offset: (pageNumber - 1) * pageSize\r\n  }\r\n};\r\n\r\nexport const setAuthor = (location, author) => setParameter(location, authorQueryStringKey, author);\r\n\r\nexport const getAuthor = (location) => getParameter(location, authorQueryStringKey);\r\n\r\nexport const setPersona = (location, persona) => setParameter(location, personaQueryStringKey, persona);\r\n\r\nexport const getPersona = (location) => getParameter(location, personaQueryStringKey);\r\n\r\nconst getParameter = (location, key) => {\r\n  const urlParams = new URLSearchParams(location.search);\r\n\r\n  return urlParams.get(key) || \"\";\r\n};\r\n\r\nconst setParameter = (location, key, value) => {\r\n  const urlParams = new URLSearchParams(location.search);\r\n\r\n  if(!value){\r\n    urlParams.delete(key);\r\n  }\r\n  else{\r\n    urlParams.set(key, value);\r\n  }\r\n\r\n  return {\r\n    pathname: location.pathname,\r\n    search: `?${urlParams}`\r\n  };\r\n}\r\n","import get from \"lodash.get\";\r\nimport upperFirst from \"lodash.upperfirst\";\r\nimport camelCase from \"lodash.camelcase\";\r\nimport {\r\n  Layout,\r\n  UnknownComponent,\r\n  Link,\r\n  Filter,\r\n  GraphQLLoader,\r\n} from \"./components\";\r\nimport { Container, Grid, makeStyles, Paper } from \"@material-ui/core\";\r\nimport * as thumbnailLayouts from \"./components/thumbnails\";\r\nimport React, { useState } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { assetFields, seoFields } from \"./graphQLFragments\";\r\nimport getSeo from \"./utils/getSeo\";\r\nimport { getAuthor, setAuthor } from \"./utils/queryString\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  thumbnailPaper: {\r\n    height: \"100%\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  pagination: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nfunction ListingPage(props) {\r\n  const listingPageQuery = gql`\r\n        # TODO add persona once https://kentico.atlassian.net/browse/DEL-3086 is done\r\n        query ListingPageQuery($limit: Int, $offset: Int, $codename: String! ${\r\n          props.author ? \", $author: String!\" : \"\"\r\n        }){\r\n            author_All {\r\n                items {\r\n                    firstName\r\n                    lastName\r\n                    _system_ {\r\n                        codename\r\n                    }\r\n                }\r\n            }\r\n            # TODO add persona once https://kentico.atlassian.net/browse/DEL-3086 is done\r\n            post_All(limit: $limit, offset: $offset, ${\r\n              props.author ? \"where: {author: {containsAny: [$author]} }\" : \"\"\r\n            }) {\r\n                items {\r\n                    _system_ {\r\n                        type {\r\n                            _system_ {\r\n                                codename\r\n                            }\r\n                        }\r\n                        codename\r\n                    }\r\n                    image {\r\n                        ...AssetFields\r\n                    }\r\n                    title\r\n                    slug\r\n                    excerpt\r\n                    publishingDate\r\n                    author {\r\n                        ... on Author {\r\n                            firstName\r\n                            lastName\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            navigationItem(codename: $codename) {\r\n                _seo {\r\n                  ...SeoFields\r\n                }\r\n                content {\r\n                  ... on ListingPage {\r\n                      contentType\r\n                  }\r\n                }\r\n            }\r\n        }\r\n\r\n        ${assetFields}\r\n        ${seoFields}\r\n    `;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [relatedItems, setRelatedItems] = useState([]);\r\n  const [authors, setAuthors] = useState([]);\r\n  // const [personas, setPersonas] = useState([]);\r\n  const [seo, setSeo] = useState(null);\r\n\r\n  const { loading, error, data } = useQuery(\r\n    listingPageQuery,\r\n    {\r\n      variables: {\r\n        codename: props.codename,\r\n        author: props.author,\r\n        /* persona: props.persona,*/ limit: props.limit,\r\n        offset: props.offset,\r\n      },\r\n      onCompleted: (data) => {\r\n        const collection =\r\n          data[`${data.navigationItem.content.contentType}_All`];\r\n        if (collection) {\r\n          setRelatedItems(collection.items);\r\n        } else {\r\n          setRelatedItems(null);\r\n        }\r\n\r\n        setAuthors(\r\n          data.author_All.items.map((author) => {\r\n            return {\r\n              name: `${author.firstName} ${author.lastName}`,\r\n              codename: author._system_.codename,\r\n            };\r\n          })\r\n        );\r\n\r\n        // TODO update hardcoded personas and load them from Kontent\r\n        // setPersonas([{\r\n        //     name: \"Developer\",\r\n        //     codename: \"developer\"\r\n        // }]);\r\n\r\n        setSeo(getSeo(data.navigationItem._seo));\r\n      },\r\n    },\r\n    [props.codename, props.author, props.persona, props.limit, props.offset]\r\n  );\r\n\r\n  if (error || loading || !seo) {\r\n    return <GraphQLLoader error={error} loading={loading} />;\r\n  }\r\n\r\n  if (relatedItems == null) {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      console.error(\r\n        `Unknown listing contentType: ${data.navigationItem.content.contentType}`\r\n      );\r\n      return (\r\n        <UnknownComponent {...props}>\r\n          <pre>{JSON.stringify(data, undefined, 2)}</pre>\r\n        </UnknownComponent>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout {...props} seo={seo}>\r\n      <Container className={classes.root}>\r\n        <Filter\r\n          label=\"Author\"\r\n          parameterName=\"author\"\r\n          options={authors}\r\n          updateLocation={setAuthor}\r\n          getValueFromLocation={getAuthor}\r\n        />\r\n        {/* <Filter label=\"Persona\" parameterName=\"persona\" options={personas} updateLocation={setPersona} getValueFromLocation={getPersona} /> */}\r\n        {relatedItems.length > 0 && (\r\n          <Grid container spacing={4} alignItems=\"stretch\">\r\n            {relatedItems.map((item, item_idx) => {\r\n              const contentType = upperFirst(\r\n                camelCase(get(item, \"_system_.type._system_.codename\", null))\r\n              );\r\n              const ThumbnailLayout = thumbnailLayouts[contentType];\r\n              if (process.env.NODE_ENV === \"development\" && !ThumbnailLayout) {\r\n                console.error(\r\n                  `Unknown section component for section content type: ${contentType}`\r\n                );\r\n                return (\r\n                  <Grid item md={4} sm={12} key={item_idx}>\r\n                    <Paper className={classes.thumbnailPaper}>\r\n                      <UnknownComponent {...props}>\r\n                        <pre>{JSON.stringify(item, undefined, 2)}</pre>\r\n                      </UnknownComponent>\r\n                    </Paper>\r\n                  </Grid>\r\n                );\r\n              }\r\n\r\n              return (\r\n                <Grid variant=\"inbound\" item md={4} sm={12} key={item_idx}>\r\n                  <Paper className={classes.thumbnailPaper}>\r\n                    <ThumbnailLayout\r\n                      {...props}\r\n                      item={item}\r\n                      site={props}\r\n                      columnCount={3}\r\n                    />\r\n                  </Paper>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        )}\r\n        <div className={classes.pagination}>\r\n          <Link href={props.prevPage}>Previous page</Link>\r\n          <Link href={props.nextPage}>Next page</Link>\r\n        </div>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default ListingPage;\r\n","import get from \"lodash.get\";\r\nimport { Image, Layout, RichText, GraphQLLoader } from \"./components\";\r\nimport { Container, makeStyles, Typography, useTheme } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport {\r\n  assetFields,\r\n  seoFields,\r\n  richTextFields,\r\n} from \"./graphQLFragments\";\r\nimport getSeo from \"./utils/getSeo\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nfunction SimplePage(props) {\r\n  const simplePageFields = gql`\r\n    fragment SimplePageFields on SimplePage {\r\n      content {\r\n        ...RichTextFields\r\n      }\r\n      image {\r\n        ...AssetFields\r\n      }\r\n      subtitle\r\n      title\r\n    }\r\n  `;\r\n\r\n  const simplePageQuery = gql`\r\n    query SimplePageQuery($codename: String!) {\r\n      simplePage(codename: $codename) {\r\n        ...SimplePageFields\r\n      }\r\n    }\r\n\r\n    ${simplePageFields}\r\n    ${assetFields}\r\n    ${richTextFields}\r\n  `;\r\n\r\n  const navigationAndSimplePageQuery = gql`\r\n    query NavigationAndSimplePageQuery($codename: String!) {\r\n      navigationItem(codename: $codename) {\r\n        _seo {\r\n          ...SeoFields\r\n        }\r\n        content {\r\n          ... on SimplePage {\r\n            ...SimplePageFields\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    ${simplePageFields}\r\n    ${assetFields}\r\n    ${richTextFields}\r\n    ${seoFields}\r\n  `;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const imageSizes = `${theme.breakpoints.values.md}px`;\r\n\r\n  const [page, setPage] = useState(null);\r\n  const [seo, setSeo] = useState({});\r\n\r\n  const { loading, error } = useQuery(\r\n    props.seo ? simplePageQuery : navigationAndSimplePageQuery,\r\n    {\r\n      variables: { codename: props.codename },\r\n      onCompleted: (data) => {\r\n        if (props._seo) {\r\n          setPage(data.simplePage);\r\n          setSeo(props.seo);\r\n        } else {\r\n          setPage(data.navigationItem.content);\r\n          setSeo(getSeo(data.navigationItem.seo));\r\n        }\r\n      },\r\n    },\r\n    [props.codename, props.seo]\r\n  );\r\n\r\n  if (error || loading || !page) {\r\n    return <GraphQLLoader error={error} loading={loading} />;\r\n  }\r\n\r\n  return (\r\n    <Layout {...props} seo={seo}>\r\n      <Container className={classes.root} maxWidth=\"md\">\r\n        {get(page, \"title\", null) && (\r\n          <Typography variant=\"h1\">{get(page, \"title\", null)}</Typography>\r\n        )}\r\n        {get(page, \"subtitle\", null) && (\r\n          <Typography variant=\"subtitle1\">{get(page, \"subtitle\")}</Typography>\r\n        )}\r\n\r\n        {get(page, \"image\", null) && (\r\n          <div>\r\n            <Image\r\n              sizes={imageSizes}\r\n              asset={get(page, \"image\", null)}\r\n              alt={\r\n                get(page, \"image.description\") ||\r\n                get(page, \"image.name\", null)\r\n              }\r\n            />\r\n          </div>\r\n        )}\r\n        <Typography component=\"div\">\r\n          <RichText\r\n            richTextElement={get(page, \"content\", null)}\r\n            mappings={props.mappings}\r\n          />\r\n        </Typography>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default SimplePage;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport get from \"lodash.get\";\nimport Post from \"./Post\";\nimport { getUrlSlug } from \"./utils\";\nimport LandingPage from \"./LandingPage\";\nimport ListingPage from \"./ListingPage\";\nimport SimplePage from \"./SimplePage\";\nimport { UnknownComponent } from \"./components\";\nimport {\n  actionFields,\n  assetFields,\n  seoFields,\n  subpageNavigationItemFields,\n} from \"./graphQLFragments\";\nimport GraphQLLoader from \"./components/GraphQLLoader\";\nimport getSeo from \"./utils/getSeo\";\nimport { getListingPaginationAndFilter } from \"./utils/queryString\";\n\nexport default function App() {\n  const homePageQuery = gql`\n    query HomePageQuery($codename: String!) {\n      post_All {\n        items {\n          slug\n          _system_ {\n            codename\n            type {\n              _system_ {\n                codename\n              }\n            }\n          }\n        }\n      }\n      homepage(codename: $codename) {\n        content {\n          ... on LandingPage {\n            _system_ {\n              codename\n              type {\n                _system_ {\n                  codename\n                }\n              }\n            }\n          }\n        }\n        _seo {\n          ...SeoFields\n        }\n        headerLogo {\n          ...AssetFields\n        }\n        title\n        favicon {\n          url\n        }\n        font {\n          items {\n            _system_ {\n              codename\n            }\n          }\n        }\n        palette {\n          items {\n            _system_ {\n              codename\n            }\n          }\n        }\n        mainMenu {\n          ... on Menu {\n            _system_ {\n              codename\n            }\n            actions {\n              items {\n                ... on Action {\n                  ...ActionFields\n                }\n              }\n            }\n          }\n        }\n        subpages {\n          items {\n            ... on NavigationItem {\n              ...SubpageNavigationItemFields\n              subpages {\n                items {\n                  ...SubpageNavigationItemFields\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    ${seoFields}\n    ${assetFields}\n    ${actionFields}\n    ${subpageNavigationItemFields}\n  `;\n\n  const getNavigationData = (parrentSlug, item) => {\n    if (item._system_?.type?._system_.codename === \"post\") {\n      return {\n        slug: parrentSlug.concat([item.slug]),\n        navigationType: \"post\",\n        navigationCodename: item._system_?.codename,\n        contentCodename: item._system_?.codename,\n        contentType: item._system_?.type._system_.codename,\n      };\n    }\n    return {\n      slug: parrentSlug.concat([item.slug]),\n      navigationType: \"navigationItem\",\n      navigationCodename: item._system_?.codename,\n      contentCodename: item.content._system_.codename,\n      contentType: item.content._system_.type._system_.codename,\n    };\n  };\n\n  const homepageCodename = \"homepage\";\n\n  const getMappings = (data) => {\n    const mappings = [\n      {\n        slug: [],\n        navigationCodename: homepageCodename,\n        navigationType: \"homepage\",\n        contentCodename: data.homepage.content._system_.codename,\n        contentType: data.homepage.content._system_.type._system_.codename,\n      },\n    ];\n\n    data.homepage.subpages.items.forEach((item) => {\n      const navigationData = getNavigationData([], item);\n      mappings.push(navigationData);\n      mappings.push(\n        ...item.subpages.items.map((subItem) =>\n          getNavigationData(navigationData.slug, subItem)\n        )\n      );\n\n      const content = item.content;\n      if (content._system_.type._system_.codename === \"listing_page\") {\n        const listingData = data[`${content.contentType}_All`];\n        if (!listingData) {\n          console.error(\n            `Unknown listing page content type: ${content.contentType}`\n          );\n        } else {\n          mappings.push(\n            ...listingData.items.map((subItem) =>\n              getNavigationData(navigationData.slug, subItem)\n            )\n          );\n        }\n      }\n    });\n\n    return mappings.reduce((result, item) => {\n      result[getUrlSlug(item.slug)] = {\n        navigationCodename: item.navigationCodename,\n        navigationType: item.navigationType,\n        contentCodename: item.contentCodename,\n        contentType: item.contentType,\n      };\n\n      return result;\n    }, {});\n  };\n\n  const getSiteConfiguration = (data) => {\n    return {\n      asset: get(data, \"homepage.headerLogo\", null),\n      title: get(data, \"homepage.title\", \"\"),\n      mainMenuActions: get(\n        data,\n        \"homepage.mainMenu.actions.items\",\n        []\n      ),\n      favicon: get(data, \"homepage.favicon.url\", null),\n      font: get(data, \"homepage.font.items[0]._system_.codename\", null),\n      palette: get(data, \"homepage.palette.items[0]._system_.codename\", null),\n    };\n  };\n\n  const { loading, error } = useQuery(homePageQuery, {\n    variables: { codename: homepageCodename },\n    onCompleted: (data) => {\n      const mappings = getMappings(data);\n      const siteConfiguration = getSiteConfiguration(data);\n\n      setMappings(mappings);\n      setSiteConfiguration(siteConfiguration);\n      setHomepageSeo(getSeo(data.homepage._seo));\n    },\n  });\n\n  const [mappings, setMappings] = useState(null);\n  const [siteConfiguration, setSiteConfiguration] = useState(null);\n  const [homepageSeo, setHomepageSeo] = useState(null);\n\n  if (error || loading || !mappings || !siteConfiguration || !homepageSeo) {\n    return <GraphQLLoader error={error} loading={loading} />;\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" render={renderPage} />\n      </Switch>\n    </Router>\n  );\n\n  function renderPage({ location }) {\n    const navigationItem = mappings[getUrlSlug(location.pathname)];\n\n    if (!navigationItem) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.error(`Unknown navigation item pathname: ${location.pathname}`);\n        return (\n          <div>\n            <h2>Not found</h2>\n            <pre>{JSON.stringify(mappings, undefined, 2)}</pre>\n          </div>\n        );\n      }\n      return <h2>Not found</h2>;\n    }\n\n    const pageProps = {\n      siteConfiguration,\n      mappings,\n    };\n\n    if (navigationItem.navigationType === \"homepage\") {\n      pageProps[\"seo\"] = homepageSeo;\n      pageProps[\"codename\"] = navigationItem.contentCodename;\n    }\n\n    switch (navigationItem.contentType) {\n      case \"landing_page\":\n        return (\n          <LandingPage\n            {...pageProps}\n            codename={\n              pageProps[\"codename\"] || navigationItem.navigationCodename\n            }\n          />\n        );\n      case \"listing_page\":\n        return (\n          <ListingPage\n            {...pageProps}\n            codename={navigationItem.navigationCodename}\n            {...getListingPaginationAndFilter(location)}\n          />\n        );\n      case \"simple_page\":\n        return (\n          <SimplePage\n            {...pageProps}\n            codename={\n              pageProps[\"codename\"] || navigationItem.navigationCodename\n            }\n          />\n        );\n      case \"post\":\n        return (\n          <Post {...pageProps} codename={navigationItem.contentCodename} />\n        );\n      default:\n        if (process.env.NODE_ENV === \"development\") {\n          console.error(\n            `Unknown navigation item content type: ${navigationItem.contentType}`\n          );\n          return (\n            <UnknownComponent>\n              <pre>{JSON.stringify(mappings, undefined, 2)}</pre>\n            </UnknownComponent>\n          );\n        }\n        return null;\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\n\n\nconst GQL_ENDPOINT = process.env.REACT_APP_KONTENT_GRAPHQL_ENDPOINT || \"https://graphql.kontent.ai\";\nconst PROJECT_ID = process.env.REACT_APP_KONTENT_PROJECT_ID || \"ad25961e-f934-01dc-e1fa-f4dd41b84df2\";\n\n\nconst client = new ApolloClient({\n    cache: new InMemoryCache({\n        // https://github.com/apollographql/apollo-client/issues/7648#issuecomment-968969367\n        // possibleTypes: {\n        //     _Item: [\n        //         \"LandingPage\",\n        //         \"ListingPage\",\n        //         \"SimplePage\"\n        //     ]\n        // }\n    }),\n    uri: `${GQL_ENDPOINT}/${PROJECT_ID}`,\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <HelmetProvider>\n            <ApolloProvider client={client}>\n                <App />\n            </ApolloProvider>\n        </HelmetProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}